name: Examen HTML EcoBook - Validaci√≥n Detallada
on: [push]

jobs:
  evaluar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Inicializar variables
      - name: Configurar entorno
        id: config
        run: |
          echo "puntaje=0" >> $GITHUB_ENV
          echo "errores=''" >> $GITHUB_ENV
          echo "max_puntaje=100" >> $GITHUB_ENV
          echo "aprobado=false" >> $GITHUB_ENV
      # funcion para agregar mensajes
      - name: Configurar funciones de mensajes
        id: funciones
        run: |
          echo "::group::üìå Resumen de Validaci√≥n"
          echo "Comenzando validaci√≥n del proyecto..."
          echo "::endgroup::"
      # ========================
      # 1. VALIDACI√ìN DE ESTRUCTURA (15%)
      # ========================
      - name: Validar estructura de carpetas
        run: |
          echo "::group::üìÇ Validando estructura de carpetas"
          # Assets debe contener im√°genes
          if [ ! -d "assets" ]; then
            echo "::error::‚ùå Falta carpeta 'assets' (-3 puntos)"
            echo "errores+='‚ùå Falta completamente la carpeta assets\n'" >> $GITHUB_ENV
          else
            if [ -z "$(find assets -type f \( -iname '*.jpg' -o -iname '*.png' -o -iname '*.svg' \))" ]; then
              echo "::error::‚ùå Carpeta 'assets' no contiene im√°genes (-3 puntos)"
              echo "errores+='‚ùå La carpeta assets no tiene archivos de imagen\n'" >> $GITHUB_ENV
            else
              echo "‚úÖ Carpeta 'assets' con im√°genes encontrada (+3 puntos)"
              echo "exitos+='‚úÖ Carpeta assets v√°lida\n'" >> $GITHUB_ENV
              echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
            fi
          fi

          # CSS debe tener archivos
          if [ ! -d "css" ]; then
            echo "::error::‚ùå Falta carpeta 'css' (-3 puntos)"
            echo "errores+='‚ùå Falta completamente la carpeta css\n'" >> $GITHUB_ENV
          else
            if [ -z "$(find css -name '*.css')" ]; then
              echo "::error::‚ùå Carpeta 'css' no contiene archivos CSS (-3 puntos)"
              echo "errores+='‚ùå La carpeta css est√° vac√≠a\n'" >> $GITHUB_ENV
            else
              echo "‚úÖ Carpeta 'css' con archivos encontrados (+3 puntos)"
              echo "exitos+='‚úÖ Carpeta css v√°lida\n'" >> $GITHUB_ENV
              echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
            fi
          fi

          # JS debe tener archivos (opcional)
          if [ -d "js" ] && [ -z "$(find js -name '*.js')" ]; then
            echo "::warning::‚ö†Ô∏è Carpeta 'js' est√° vac√≠a (pero no afecta puntaje)"
          fi

          # Validar p√°ginas
          paginas=("alojamientos" "contacto" "registro")
          for pagina in "${paginas[@]}"; do
            if [ ! -f "pages/$pagina.html" ]; then
              echo "::error::‚ùå Falta archivo pages/$pagina.html (-3 puntos)"
              echo "errores+='‚ùå Falta archivo pages/$pagina.html\n'" >> $GITHUB_ENV
            else
              echo "‚úÖ Archivo pages/$pagina.html encontrado (+3 puntos)"
              echo "exitos+='‚úÖ Archivo pages/$pagina.html presente\n'" >> $GITHUB_ENV
              echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
            fi
          done

      # ========================
      # 2. VALIDACI√ìN index.html (20%)
      # ========================
      - name: Validar index.html
        run: |
          # Verificar estructura sem√°ntica
          etiquetas=("header" "nav" "main" "article" "section" "footer")
          for etiqueta in "${etiquetas[@]}"; do
            if ! grep -q "<$etiqueta" index.html; then
              echo "::error::‚ùå Falta etiqueta <$etiqueta> en index.html (-2 puntos)"
              echo "errores+='‚ùå Falta etiqueta <$etiqueta> en index.html\n'" >> $GITHUB_ENV
            else
              echo "‚úÖ Etiqueta <$etiqueta> encontrada (+2 puntos)"
              echo "exitos+='‚úÖ Etiqueta <$etiqueta> presente\n'" >> $GITHUB_ENV
              echo "puntaje=$(( $puntaje + 2 ))" >> $GITHUB_ENV
            fi
          done

          # Verificar navegaci√≥n
          paginas=("alojamientos" "contacto" "registro")
          for pagina in "${paginas[@]}"; do
            if ! grep -q "href=\"pages/$pagina.html\"" index.html; then
              echo "::error::‚ùå Falta link a $pagina.html en men√∫ (-1 punto)"
              echo "errores+='‚ùå Falta link a $pagina.html en men√∫\n'" >> $GITHUB_ENV
            else
              echo "‚úÖ Link a $pagina.html encontrado (+1 punto)"
              echo "exitos+='‚úÖ Link a $pagina.html presente\n'" >> $GITHUB_ENV
              echo "puntaje=$(( $puntaje + 1 ))" >> $GITHUB_ENV
            fi
          done

          # Verificar cards de alojamientos
          if ! grep -q "<figure>" index.html || [ $(grep -c "<figure>" index.html) -lt 2 ]; then
            echo "::error::‚ùå Debe haber al menos 2 alojamientos con <figure> (-3 puntos)"
            echo "errores+='‚ùå Faltan cards de alojamientos en index.html\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Etiquetas <figure> encontrado (+3 punto)"
            echo "exitos+='‚úÖ Etiquetas  <figure> presente\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
          fi

          # Verificar enlaces en footer
          if ! grep -q "href=\"pages/contacto.html\"" index.html || ! grep -q "href=\"pages/registro.html\"" index.html; then
            echo "::error::‚ùå Footer debe tener links a Contacto y Registro (-2 puntos)"
            echo "errores+='‚ùå Enlaces faltantes en footer\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Link a $contacto.html y $registro.html encontrado (+2 punto)"
            echo "exitos+='‚úÖ Link a $contacto.html y $registro.html presente\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 2 ))" >> $GITHUB_ENV
          fi

      # ========================
      # 3. VALIDACI√ìN alojamientos.html (20%)
      # ========================
      - name: Validar alojamientos.html
        run: |
          # Verificar tabla
          columnas=("Nombre" "Ubicaci√≥n" "Precio/noche")
          for columna in "${columnas[@]}"; do
            if ! grep -q "<th>$columna</th>" pages/alojamientos.html; then
              echo "::error::‚ùå Falta columna '$columna' en tabla (-3 puntos)"
              echo "errores+='‚ùå Falta columna $columna en tabla\n'" >> $GITHUB_ENV
            else
              echo "‚úÖ Columna $columna encontrado (+3 punto)"
              echo "exitos+='‚úÖ $columna presente\n'" >> $GITHUB_ENV
              echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
            fi
          done

          # Verificar al menos un registro
          if ! grep -q "<tr>.*<td>.*</td>.*<td>.*</td>.*<td>.*</td>.*</tr>" pages/alojamientos.html; then
            echo "::error::‚ùå Tabla debe tener al menos un registro (-3 puntos)"
            echo "errores+='‚ùå Tabla sin registros\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Registro en tabla encontrado (+3 punto)"
            echo "exitos+='‚úÖ Registro en tabla\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
          fi

          # Verificar aside
          if ! grep -q "<aside>" pages/alojamientos.html || ! grep -q "<ul>" pages/alojamientos.html; then
            echo "::error::‚ùå Falta secci√≥n 'Tips eco-friendly' con lista (-4 puntos)"
            echo "errores+='‚ùå Falta aside con tips\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Etiqueta <ul> dentro de <aside> encontrado (+4 punto)"
            echo "exitos+='‚úÖ Etiqueta <ul> presente\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 4 ))" >> $GITHUB_ENV
          fi

      # ========================
      # 4. VALIDACI√ìN contacto.html (15%)
      # ========================
      - name: Validar contacto.html
        run: |
          # Verificar formulario
          campos=(
            'name="nombre".*type="text"'
            'name="email".*type="email"'
            'name="mensaje".*<textarea'
          )
          for campo in "${campos[@]}"; do
            if ! grep -Pq "$campo" pages/contacto.html; then
              echo "::error::‚ùå Campo incorrecto en formulario de contacto (-2 puntos)"
              echo "errores+='‚ùå Campo faltante en formulario de contacto\n'" >> $GITHUB_ENV
            else
              echo "‚úÖ $campo en formulario encontrado (+2 punto)"
              echo "exitos+='‚úÖ $campo presente\n'" >> $GITHUB_ENV
              echo "puntaje=$(( $puntaje + 2 ))" >> $GITHUB_ENV
            fi
          done

          # Verificar address
          if ! grep -q "<address>" pages/contacto.html || ! grep -q "contacto@ecobook.com" pages/contacto.html; then
            echo "::error::‚ùå Falta informaci√≥n de contacto en <address> (-3 puntos)"
            echo "errores+='‚ùå Falta address con informaci√≥n\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Etiqueta <address> encontrado (+3 punto)"
            echo "exitos+='‚úÖ <address> presente\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
          fi

      # ========================
      # 5. VALIDACI√ìN registro.html (25%)
      # ========================
      - name: Validar registro.html
        run: |
          # Verificar estructura del formulario
          if ! grep -q "<fieldset>" pages/registro.html || ! grep -q "<legend>" pages/registro.html; then
            echo "::error::‚ùå Formulario debe tener <fieldset> y <legend> (-5 puntos)"
            echo "errores+='‚ùå Falta estructura fieldset/legend en formulario\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Etiquetaa <fieldset> y <legend> encontrado (+5 punto)"
            echo "exitos+='‚úÖ Etiquetaa <fieldset> y <legend> presente\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 5 ))" >> $GITHUB_ENV
          fi

          # Verificar campos obligatorios
          campos=(
            'name="nombre".*type="text".*required'
            'name="email".*type="email".*required'
            'name="password".*type="password".*required'
            'name="terminos".*type="checkbox".*required'
          )
          for campo in "${campos[@]}"; do
            if ! grep -Pq "$campo" pages/registro.html; then
              echo "::error::‚ùå Campo requerido faltante o mal configurado (-3 puntos)"
              echo "errores+='‚ùå Campo requerido faltante en registro\n'" >> $GITHUB_ENV
            else
              echo "‚úÖ $campo requerido encontrado (+3 punto)"
              echo "exitos+='‚úÖ $campo requerido presente\n'" >> $GITHUB_ENV
              echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
            fi
          done

          # Verificar etiquetas y placeholders
          if ! grep -q "<label" pages/registro.html || ! grep -q "placeholder" pages/registro.html; then
            echo "::error::‚ùå Falta etiquetas label o placeholders (-4 puntos)"
            echo "errores+='‚ùå Falta accesibilidad en formulario (labels/placeholders)\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Etiquetas <label> o "placeholder" encontrado (+4 punto)"
            echo "exitos+='‚úÖ Etiquetas <label> o "placeholder" presente\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 4 ))" >> $GITHUB_ENV
          fi

          # Verificar bot√≥n de env√≠o
          if ! grep -q '<button type="submit"' pages/registro.html; then
            echo "::error::‚ùå Falta bot√≥n de env√≠o (-2 puntos)"
            echo "errores+='‚ùå Falta bot√≥n de submit\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Etiquetas <button> encontrado (+2 punto)"
            echo "exitos+='‚úÖ Etiquetas <button> presente\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 2 ))" >> $GITHUB_ENV
          fi

      # ========================
      # 6. VALIDACI√ìN ADICIONAL (5%)
      # ========================
      - name: Validaci√≥n extra
        run: |
          # Verificar enlaces a CSS/JS
          if ! grep -q '<link.*css/' index.html; then
            echo "::error::‚ùå No se enlaza archivo CSS (-2 puntos)"
            echo "errores+='‚ùå Falta enlace a archivo CSS\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ Archivo CSS enlazado encontrado (+2 punto)"
            echo "exitos+='‚úÖ Archivo CSS enlazado presente\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 2 ))" >> $GITHUB_ENV
          fi

          # Verificar uso de divs prohibidos
          if grep -q '<div.*id="header"' index.html || grep -q '<div.*id="footer"' index.html; then
            echo "::error::‚ùå No uses <div> para header/footer (-3 puntos)"
            echo "errores+='‚ùå Uso incorrecto de divs para secciones sem√°nticas\n'" >> $GITHUB_ENV
          else
            echo "‚úÖ No se encontro <div> prohibidos (+2 punto)"
            echo "exitos+='‚úÖ Sin <div> prohibidos\n'" >> $GITHUB_ENV
            echo "puntaje=$(( $puntaje + 3 ))" >> $GITHUB_ENV
          fi

      # ========================
      # RESULTADO FINAL
      # ========================
      - name: Mostrar resultados
        run: |
          porcentaje=$((($puntaje * 100) / $max_puntaje))
          # Convertir a nota 0-20 (regla de tres simple)
          nota=$(echo "scale=1; $puntaje * 20 / 100" | bc)

          echo "::group::üìä RESULTADO FINAL"
          echo "PUNTUACI√ìN: $puntaje/$max_puntaje ($porcentaje%)"
          echo "NOTA (0-20): $nota/20"
          echo "PORCENTAJE: $porcentaje%"
          echo ""

          if [ $puntaje -ge 70 ]; then
            echo "üéâ ¬°APROBADO! üéâ (Nota minima: 14/20)"
            echo "aprobado=true" >> $GITHUB_ENV
          else
            echo "‚ùå REPROBADO - Se necesitan 70 puntos (14/20) para aprobar"
            echo "aprobado=false" >> $GITHUB_ENV
          fi

          echo ""
          echo "‚úîÔ∏è TESTS PASADOS:"
          echo -e "$exitos"
          echo ""
          echo "‚úñÔ∏è ERRORES ENCONTRADOS:"
          echo -e "$errores"
          echo ""
          echo "üí° Consejo: Corrige los errores y vuelve a enviar tu soluci√≥n"
          echo "::endgroup::"

          # Fallar el workflow si no est√° aprobado
          if [ "$aprobado" = "false" ]; then
            exit 1
          fi
